using Proto.Msg;

public static class MessageHandler
{
    public static MessageHandler<IMessage> Meassage = new MessageHandler<IMessage>();

    public static MessageHandler<{0}> {0}Res = new MessageHandler<{0}>();

    public static void Register(this IServerEvent iServerEvent)
    {
        Meassage += iServerEvent.OnMessageRes;

        {0}Res += iServerEvent.OnMessageRes;
    }

    public static void UnRegister(this IServerEvent iServerEvent)
    {
        Meassage -= iServerEvent.OnMessageRes;

        {0}Res -= iServerEvent.OnMessageRes;
    }
}

/// <summary>
/// 数据更新 以整块为单位
/// </summary>
public interface IServerEvent
{
    void OnMessageRes(IMessage info);
    void OnMessageRes({0} info);
}

namespace Proto.Msg
{
    public class Mod
    {
        public int cmd { get; set; }
        public int action { get; set; }
        public int retcode { get; set; }
        public int sendtime { get; set; }
        public string token { get; set; }
        public object content { get; set; }

        public int GetCode()
        {
            return action;
        }

    }

    public partial class {0} : Mod{}
}
